// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eleven-sh/hetzner-cloud-provider/userconfig (interfaces: EnvVarsGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// UserConfigEnvVarsGetter is a mock of EnvVarsGetter interface.
type UserConfigEnvVarsGetter struct {
	ctrl     *gomock.Controller
	recorder *UserConfigEnvVarsGetterMockRecorder
}

// UserConfigEnvVarsGetterMockRecorder is the mock recorder for UserConfigEnvVarsGetter.
type UserConfigEnvVarsGetterMockRecorder struct {
	mock *UserConfigEnvVarsGetter
}

// NewUserConfigEnvVarsGetter creates a new mock instance.
func NewUserConfigEnvVarsGetter(ctrl *gomock.Controller) *UserConfigEnvVarsGetter {
	mock := &UserConfigEnvVarsGetter{ctrl: ctrl}
	mock.recorder = &UserConfigEnvVarsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *UserConfigEnvVarsGetter) EXPECT() *UserConfigEnvVarsGetterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *UserConfigEnvVarsGetter) Get(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *UserConfigEnvVarsGetterMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*UserConfigEnvVarsGetter)(nil).Get), arg0)
}
